micronaut :
  application :
    name : smartmirror-backend
  server :
    cors :
      enabled : true
      configurations :
        web :
          allowedOrigins :
            - http://localhost:3000
    host : ${SERVER_HOST:0.0.0.0}
    port : ${SERVER_PORT:8080}
  router :
    static-resources :
      default :
        paths : classpath:frontend
        mapping : /**
        enabled : true
  security :
    reject-not-found : false
    authentication : cookie
    endpoints :
      login :
        path : api/account/login
      logout :
        path : api/account/logout
        get-allowed : true
    redirect :
      enabled : true
    token :
      jwt :
        signatures :
          secret :
            generator :
              secret : ${JWT_SECRET:pleaseChangeThisSecretForANewOne}
        generator :
          access-token :
            expiration : 7776000
    oauth2 :
      clients :
        spotify :
          client-id : ${SPOTIFY_OAUTH_CLIENT_ID:""}
          client-secret : ${SPOTIFY_OAUTH_CLIENT_SECRET:""}
          scopes :
            - user-read-currently-playing
            - user-read-playback-state
          authorization :
            url : https://accounts.spotify.com/authorize
          token :
            url : https://accounts.spotify.com/api/token
            auth-method : client-secret-post
      callback-uri : /api/services/auth{/provider}/callback
      login-uri : /api/services/auth{/provider}/login
r2dbc :
  datasources :
    default :
      url : ${R2DBC_URL:`r2dbc:h2:mem:///smartmirror;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE`}
      username : ${R2DBC_USER:root}
      password : ${R2DBC_PASSWORD:}
      schema-generate : ${R2DBC_SCHEMA_GENERATE:create}
      dialect : ${R2DBC_DIALECT:mysql}
smartmirror :
  services :
    openweathermap :
      token : ${OPEN_WEATHER_MAP_TOKEN:""}