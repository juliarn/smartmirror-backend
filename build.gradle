plugins {
    id("com.github.johnrengelman.shadow") version "7.1.1"
    id("io.micronaut.application") version "3.1.1"
}

version = "0.1"
group = "me.juliarn.smartmirror"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("me.juliarn.smartmirror.*")
    }
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-http-server-netty")
    implementation("io.micronaut.beanvalidation:micronaut-hibernate-validator")
    implementation("io.micronaut.security:micronaut-security")
    implementation("io.micronaut.security:micronaut-security-oauth2")
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("org.apache.logging.log4j:log4j-core:2.17.0")
    runtimeOnly("com.h2database:h2")
    runtimeOnly("org.apache.logging.log4j:log4j-api:2.17.0")
    runtimeOnly("org.apache.logging.log4j:log4j-slf4j-impl:2.17.0")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.projectreactor:reactor-core:3.4.13")
}

application {
    mainClass.set("me.juliarn.smartmirror.backend.SmartMirrorApplication")
}

java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false

task includeReactBuild {
    exec {
        workingDir("${projectDir}/smartmirror-frontend/")
        executable("npm")
        args("run", "build")
    }

    delete("${buildDir}/resources/main/frontend")
    copy {
        from("${projectDir}/smartmirror-frontend/build")
        into("${buildDir}/resources/main/frontend")
    }
}

processResources.dependsOn("includeReactBuild")